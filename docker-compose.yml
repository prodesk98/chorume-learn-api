version: '3.5'

services:
  api:
    container_name: learn-api
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./:/app
    environment:
      APP_TYPE: "app"
      PORT: 3001
      AMQP_DSN: "pyamqp://guest:guest@rabbitmq:5672//"
      MONGO_DSN: "mongodb://root:default@mongo:27017"
      MONGO_DB_NAME: "learn"
      MILVUS_HOST: "standalone"
      MILVUS_PORT: 19530
      MILVUS_DB_NAME: knowledge
      MILVUS_COLLECTION_NAME: brain
    env_file:
      - .env

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "3001:87"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - "api"

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./:/app
    environment:
      APP_TYPE: "worker"
      CONCURRENCY: 2
      AMQP_DSN: "pyamqp://guest:guest@rabbitmq:5672//"
      MONGO_DSN: "mongodb://root:default@mongo:27017"
      MONGO_DB_NAME: "learn"
      MILVUS_HOST: "standalone"
      MILVUS_PORT: 19530
      MILVUS_DB_NAME: knowledge
      MILVUS_COLLECTION_NAME: brain
    env_file:
      - .env
    depends_on:
      - "rabbitmq"

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/

  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: default
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  etcd:
    container_name: milvus-etcd
    restart: always
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    restart: always
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    restart: always
    image: milvusdb/milvus:v2.3.4
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

networks:
  default:
    name: api
    driver: bridge

volumes:
  milvus_data:
  minio_data:
  etcd_data:
  rabbitmq_data:
  mongodb_data:
